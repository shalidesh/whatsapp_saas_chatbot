version: '3.8'

services:
  app:
    build: 
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - POSTGRES_URL=postgresql://whatsapp_user:whatsapp_pass@postgres:5432/whatsapp_saas
      - REDIS_URL=redis://redis:6379/0
      - MONGODB_URL=mongodb://mongodb:27017/whatsapp_saas
      - CELERY_BROKER_URL=pyamqp://guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      - postgres
      - redis
      - mongodb
      - rabbitmq
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  celery-worker:
    build: 
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    command: celery -A app.tasks.celery_app worker --loglevel=info --concurrency=4
    environment:
      - POSTGRES_URL=postgresql://whatsapp_user:whatsapp_pass@postgres:5432/whatsapp_saas
      - REDIS_URL=redis://redis:6379/0
      - MONGODB_URL=mongodb://mongodb:27017/whatsapp_saas
      - CELERY_BROKER_URL=pyamqp://guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  celery-beat:
    build: 
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    command: celery -A app.tasks.celery_app beat --loglevel=info
    environment:
      - POSTGRES_URL=postgresql://whatsapp_user:whatsapp_pass@postgres:5432/whatsapp_saas
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=pyamqp://guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      - rabbitmq
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=whatsapp_saas
      - POSTGRES_USER=whatsapp_user
      - POSTGRES_PASSWORD=whatsapp_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

  mongodb:
    image: mongo:6
    environment:
      - MONGO_INITDB_DATABASE=whatsapp_saas
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped

  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  rabbitmq_data:
  chromadb_data:
  prometheus_data:
  grafana_data: